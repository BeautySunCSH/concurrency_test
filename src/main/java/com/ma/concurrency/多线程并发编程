多线程的并发编程核心知识点


一、线程的基础
0、线程和进程的定义
  https://blog.csdn.net/weixin_43884234/article/details/114954221?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165858816016782184643523%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=165858816016782184643523&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-114954221-null-null.142^v33^pc_rank_34,185^v2^control&utm_term=%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B&spm=1018.2226.3001.4187
  PS、同步、异步和多线程的理解
  [同步、异步：
      指的是能否开启新的线程。同步不能开启新的线程，异步可以。
      异步：异步和同步是相对的，同步就是顺序执行，执行完一个再执行下一个，需要等待、协调运行。异步就是彼此独立,在等待某事件的过程中继续做自己的事，不需要等待这一事件完成后再工作。线程就是实现异步的一个方式。异步是让调用方法的主线程不需要同步等待另一线程的完成，从而可以让主线程干其它的事情。
      异步和多线程并不是一个同等关系,异步是最终目的,多线程只是我们实现异步的一种手段。异步是当一个调用请求发送给被调用者,而调用者不用等待其结果的返回而可以做其它的事情。实现异步可以采用多线程技术或则交给另外的进程来处理。

  多线程
      多线程是程序设计的逻辑层概念，它是进程中并发运行的一段代码。多线程可以实现线程间的切换执行。
  ]

1、串行、并行、并发的理解
串行和并行指的是任务的执行方式。串行指的是多个任务时，各个任务按照一定的顺序执行，完成一个之后才能完成下一个任务;并行指的是同一时刻，多个任务在多个处理器上同时执行。
并发指的是微观上同一时刻只能有一个指令执行，但宏观上cpu的时间片快速的进行上下文切换，使得宏观上具有多个进程同时执行的效果。

2、线程的状态
见com.ma.concurrency.thread.ThreadStatusDemo
NEW（新建状态）、RUNNABLE（可运行状态）、BLOCKED（阻塞状态）、WAITING（等待状态）、TIMED_WAITING（超时等待状态）、TERMINATED（结束状态）

3、创建线程的方式
a.继承Thread类，重写run方法创建线程
b.实现Runnable接口，重写run方法创建线程
(可以使用runnable创建多线程卖火车票的例子看出，使用Runnable接口创建线程可以共享同一个线程类变量;另外多实现，可以是程序灵活扩张)
c.线程池创建线程

4、线程的挂起和恢复
见 SuspendThreadDemo
被废弃的线程挂起和恢复的方法：suspend()和resume();实际开发中不要使用suspend()和resume()方法，因为suspend()会持有锁挂起，会造成死锁的情况发生

5、线程的优先级
在操作系统中，线程可以划分为优先级，线程优先级越高，获得CPU时间片的概率就越大，但线程的优先级的高低与线程的执行顺序没有必然的
联系，优先级底的线程也有可能比优先级高的线程先执行
线程的优先级分为 1~10 一共 10 个等级，所有线程默认优先级为 5，如果优先级小于 1 或大于 10，则会抛出 java.lang.IllegalArgumentException 异常。

6、守护线程
用户线程setDaemon(true);守护线程会随着用户线程而终止终止。
一般实际开发中很少用到守护线程,特别是不要再守护线程中读取文件、计算逻辑

三、线程安全性
1、线程安全和线程不安全
线程安全：《Java Concurrency In Practice》作者Brian Goetz的定义:“当多个线程访问一个对象时,如果不用考虑这些线程在运行时环境下的调度和交替执行,也不需要进行额外的同步或者在调用方进行任何其他的协调操作,调用这个对象的行为都可以获得正确的结果,那这个对象是线程安全的。
县城不安全：多线程并发访问时，得不到正确的结果
参见  com.ma.concurrency.thread.unsafe.UnsafeThread
2、原子性操作
什么是原子性操作？操作要么都成功，要么都失败，比如A转账1000给B，A账户余额3000元，B账户余额2000元，在转账的过程中突发停电的问题，那么该操作回滚到事务事前的状态
如何把非原子性操作编程原子操作？
去共享变量加锁eg:使用synchronized关键字修饰方法，保证方法中的操作原子性
3、深入理解synchronized关键字
a.synchronized修饰普通方法，锁住的是该普通方法的对象
b.synchronized修饰静态方法，锁住的是整个类




